name: Deploy The English Hub to production

on:
    push:
        branches:
            - master
    pull_request_review:
    workflow_dispatch:

jobs:
    eslint:
        if: "!contains(github.event.head_commit.message, '[skip eslint]')"
        name: ESLint Syntax Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
            - name: Setup node environment
              uses: actions/setup-node@v4
              with:
                  node-version: '>=18'
            - run: npm install eslint @eslint/js
            - run: npx eslint -v
            - run: npx eslint

    prettier:
        if: "!contains(github.event.head_commit.message, '[skip prettier]')"
        name: Run Prettier if code not formatted already
        runs-on: ubuntu-latest
        needs: [eslint]
        steps:
            - name: Checkout Repo
              uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
              with:
                  ref: ${{ github.head_ref }}
            - name: Run Prettier on code and push
              uses: creyD/prettier_action@v4.3
              with:
                  prettier_options: -w ./src/**/*
                  commit_message: 'chore(formatting[auto]): run prettier on code'
    deployment:
        if: "!contains(github.event.head_commit.message, '[skip deploy]')"
        name: Deploy new version to SparkedHost server
        runs-on: ubuntu-latest
        needs: [eslint]
        steps:
            - name: Send restart signal via api to server
              id: sendapireq
              uses: fjogeleit/http-request-action@v1
              with:
                  url: ${{ secrets.SH_SERVER_URL }}
                  method: 'POST'
                  bearerToken: ${{ secrets.SPARKEDHOST_API_KEY }}
                  customheaders: '{"Content-Type": "application/json"}'
                  data: '{"signal": "restart"}'
    release:
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        name: Create a new sentry release
        runs-on: ubuntu-latest
        needs: [deployment]
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Create Sentry release
              uses: getsentry/action-release@v1
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
                  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
              with:
                  environment: production
